{{## def.setupKeyword:
  {{
    var $lvl = it.level
      , $dataLvl = it.dataLevel
      , $schema = it.schema[$keyword]
      , $schemaPath = it.schemaPath + '.' + $keyword
      , $errSchemaPath = it.errSchemaPath + '/' + $keyword
      , $breakOnError = !it.opts.allErrors
      , $errorKeyword;

    var $data = 'data' + ($dataLvl || '')
      , $valid = 'valid' + $lvl
      , $errs = 'errs__' + $lvl;
  }}
#}}


{{## def.setCompositeRule:
  {{
    var $wasComposite = it.compositeRule;
    it.compositeRule = $it.compositeRule = true;
  }}
#}}


{{## def.resetCompositeRule:
  {{ it.compositeRule = $it.compositeRule = $wasComposite; }}
#}}


{{## def.setupNextLevel:
  {{
    var $it = it.util.copy(it)
      , $closingBraces = '';
    $it.level++;
  }}
#}}


{{## def.ifValid:
  {{? $breakOnError }}
    if ({{=$valid}}) {
    {{ $closingBraces += '}'; }}
  {{?}}
#}}


{{## def.ifResultValid:
  {{? $breakOnError }}
    if (valid{{=$it.level}}) {
    {{ $closingBraces += '}'; }}
  {{?}}
#}}


{{## def.elseIfValid:
  {{? $breakOnError }}
    {{ $closingBraces += '}'; }}
    else {
  {{?}}
#}}


{{## def.nonEmptySchema:_schema:
  it.util.schemaHasRules(_schema, it.RULES.all)
#}}


{{## def.strLength:
  {{? it.opts.unicode === false }}
    {{=$data}}.length
  {{??}}
    ucs2length({{=$data}})
  {{?}}
#}}


{{## def.willOptimize:
  it.util.varOccurences($code, $nextData) < 2
#}}


{{## def._optimizeValidate:
  it.util.varReplace($code, $nextData, $passData)
#}}


{{## def.optimizeValidate:
  {{? {{# def.willOptimize}} }}
    {{= {{# def._optimizeValidate }} }}
  {{??}}
    var {{=$nextData}} = {{=$passData}};
    {{= $code }}
  {{?}}
#}}


{{## def.cleanUp: {{ out = it.util.cleanUpCode(out); }} #}}


{{## def.cleanUpVarErrors: {{ out = it.util.cleanUpVarErrors(out); }} #}}


{{## def.$data:
  {{
    var $isData = it.opts.v5 && $schema.$data;
    var $schemaValue = $isData
                       ? it.util.getData($schema.$data, $dataLvl, it.dataPathArr)
                       : $schema;
  }}
#}}


{{## def.$dataNotType:_type:
  {{?$isData}} typeof {{=$schemaValue}} != _type || {{?}}
#}}
